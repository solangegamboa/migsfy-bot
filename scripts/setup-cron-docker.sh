#!/bin/bash

# Script para configurar cron no Docker para downloads autom√°ticos do Last.fm
# Este script deve ser executado dentro do container Docker

set -euo pipefail

echo "üê≥ Configurando cron para downloads autom√°ticos do Last.fm no Docker..."

# Verificar se estamos em um container Docker
if [[ ! -f /.dockerenv ]]; then
    echo "‚ö†Ô∏è Este script deve ser executado dentro de um container Docker"
    echo "üí° Para uso local, configure o cron manualmente:"
    echo "üí° crontab -e"
    echo "üí° Adicione: 0 2 */2 * * /caminho/para/scripts/lastfm-auto-download.sh"
    exit 1
fi

# Instalar cron se n√£o estiver instalado
if ! command -v cron >/dev/null 2>&1; then
    echo "üì¶ Instalando cron..."
    apt-get update -qq
    apt-get install -y -qq cron
fi

# Criar diret√≥rios necess√°rios
mkdir -p /app/logs

# Verificar se o arquivo de crontab existe
if [[ ! -f "/app/scripts/crontab-lastfm" ]]; then
    echo "‚ùå Arquivo crontab-lastfm n√£o encontrado"
    exit 1
fi

# Instalar crontab
echo "‚öôÔ∏è Instalando configura√ß√£o do cron..."
crontab /app/scripts/crontab-lastfm

# Verificar instala√ß√£o
echo "‚úÖ Crontab instalado:"
crontab -l

# Iniciar servi√ßo cron
echo "üöÄ Iniciando servi√ßo cron..."
service cron start

# Verificar status
if service cron status >/dev/null 2>&1; then
    echo "‚úÖ Servi√ßo cron iniciado com sucesso"
else
    echo "‚ùå Falha ao iniciar servi√ßo cron"
    exit 1
fi

# Criar script de teste
echo "üß™ Criando script de teste..."
cat > /app/scripts/test-lastfm-cron.sh << 'EOF'
#!/bin/bash
echo "üß™ Testando configura√ß√£o do cron Last.fm..."
echo "üìÖ Data atual: $(date)"
echo "üìã Crontab ativo:"
crontab -l
echo ""
echo "üîç Verificando arquivos necess√°rios:"
echo "   Script principal: $(ls -la /app/scripts/lastfm-auto-download.sh 2>/dev/null || echo 'AUSENTE')"
echo "   Arquivo .env: $(ls -la /app/.env 2>/dev/null || echo 'AUSENTE')"
echo "   Diret√≥rio logs: $(ls -ld /app/logs 2>/dev/null || echo 'AUSENTE')"
echo ""
echo "üè∑Ô∏è Configura√ß√£o Last.fm:"
if [[ -f "/app/.env" ]]; then
    grep -E "LASTFM_AUTO_" /app/.env || echo "   Nenhuma configura√ß√£o LASTFM_AUTO_ encontrada"
else
    echo "   Arquivo .env n√£o encontrado"
fi
echo ""
echo "‚úÖ Teste conclu√≠do"
EOF

chmod +x /app/scripts/test-lastfm-cron.sh

echo ""
echo "üéâ Configura√ß√£o do cron conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Configure as vari√°veis no arquivo .env:"
echo "      LASTFM_AUTO_TAGS=rock,pop,jazz"
echo "      LASTFM_AUTO_LIMIT=15"
echo "      LASTFM_API_KEY=sua_chave"
echo "      LASTFM_API_SECRET=seu_secret"
echo ""
echo "   2. Teste a configura√ß√£o:"
echo "      /app/scripts/test-lastfm-cron.sh"
echo ""
echo "   3. Teste o script manualmente:"
echo "      /app/scripts/lastfm-auto-download.sh"
echo ""
echo "   4. O cron executar√° automaticamente a cada 48 horas √†s 02:00"
echo ""
echo "üìä Para monitorar:"
echo "   tail -f /app/logs/lastfm_auto_download.log"
echo "   tail -f /app/logs/cron.log"