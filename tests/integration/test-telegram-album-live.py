#!/usr/bin/env python3

"""
Teste ao vivo da funcionalidade de sele√ß√£o de √°lbuns no Telegram
Este script inicia o bot e fornece instru√ß√µes para teste manual
"""

import os
import sys
import time
from dotenv import load_dotenv

# Carrega vari√°veis de ambiente
load_dotenv()

def check_prerequisites():
    """Verifica se todos os pr√©-requisitos est√£o atendidos"""
    print("üîç Verificando pr√©-requisitos...")
    
    # Verifica token do bot
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN n√£o configurado no .env")
        return False
    print("‚úÖ Token do Telegram configurado")
    
    # Verifica configura√ß√£o do slskd
    slskd_host = os.getenv('SLSKD_HOST')
    slskd_key = os.getenv('SLSKD_API_KEY')
    if not slskd_host or not slskd_key:
        print("‚ùå Configura√ß√£o do slskd incompleta no .env")
        return False
    print("‚úÖ Configura√ß√£o do slskd OK")
    
    # Verifica se o arquivo do bot existe
    if not os.path.exists('telegram_bot.py'):
        print("‚ùå Arquivo telegram_bot.py n√£o encontrado")
        return False
    print("‚úÖ Bot do Telegram encontrado")
    
    return True

def show_test_instructions():
    """Mostra instru√ß√µes para teste manual"""
    print("\n" + "="*60)
    print("üß™ INSTRU√á√ïES PARA TESTE DA SELE√á√ÉO DE √ÅLBUNS")
    print("="*60)
    
    print("\nüì± COMANDOS PARA TESTAR NO TELEGRAM:")
    print("   /album Pink Floyd - The Dark Side of the Moon")
    print("   /album Beatles - Abbey Road")
    print("   /album Radiohead - OK Computer")
    print("   /album Led Zeppelin - IV")
    print("   /album Queen - A Night at the Opera")
    
    print("\nüéØ O QUE ESPERAR:")
    print("   1. Bot mostra 'Buscando √°lbum...' com bot√£o de cancelar")
    print("   2. Bot lista os 5 melhores √°lbuns encontrados")
    print("   3. Cada √°lbum mostra: nome, usu√°rio, faixas, bitrate, tamanho")
    print("   4. Bot√µes clic√°veis para cada √°lbum")
    print("   5. Ao clicar, inicia download com progresso")
    print("   6. Relat√≥rio final com estat√≠sticas")
    
    print("\nüß™ CEN√ÅRIOS DE TESTE:")
    print("   ‚úÖ Teste normal: Buscar √°lbum e selecionar um")
    print("   ‚úÖ Teste de cancelamento: Cancelar durante busca")
    print("   ‚úÖ Teste de cancelamento: Cancelar durante download")
    print("   ‚úÖ Teste sem resultados: Buscar √°lbum inexistente")
    print("   ‚úÖ Teste de m√∫ltiplos usu√°rios: V√°rios comandos simult√¢neos")
    
    print("\nüîç VERIFICA√á√ïES:")
    print("   ‚Ä¢ Interface mostra informa√ß√µes corretas?")
    print("   ‚Ä¢ Bot√µes funcionam corretamente?")
    print("   ‚Ä¢ Cancelamento funciona em todas as etapas?")
    print("   ‚Ä¢ Downloads s√£o iniciados no slskd?")
    print("   ‚Ä¢ Relat√≥rios finais s√£o precisos?")
    
    print("\nüí° DICAS:")
    print("   ‚Ä¢ Use /tasks para ver tarefas ativas")
    print("   ‚Ä¢ Use /status para verificar conex√µes")
    print("   ‚Ä¢ Monitore logs do bot para debug")
    print("   ‚Ä¢ Verifique interface web do slskd para downloads")

def main():
    """Fun√ß√£o principal"""
    print("üéµ TESTE AO VIVO - SELE√á√ÉO DE √ÅLBUNS NO TELEGRAM")
    print("="*50)
    
    # Verifica pr√©-requisitos
    if not check_prerequisites():
        print("\n‚ùå Pr√©-requisitos n√£o atendidos. Corrija os problemas acima.")
        sys.exit(1)
    
    # Mostra instru√ß√µes
    show_test_instructions()
    
    # Pergunta se quer iniciar o bot
    print("\n" + "="*60)
    response = input("üöÄ Deseja iniciar o bot agora? (s/n): ").lower().strip()
    
    if response in ['s', 'sim', 'y', 'yes']:
        print("\nü§ñ Iniciando bot do Telegram...")
        print("üí° Pressione Ctrl+C para parar o bot")
        print("üì± Abra o Telegram e teste os comandos listados acima")
        
        # Pequena pausa para o usu√°rio ler
        time.sleep(2)
        
        try:
            # Importa e executa o bot
            from telegram_bot import main as bot_main
            bot_main()
        except KeyboardInterrupt:
            print("\nüõë Bot interrompido pelo usu√°rio")
        except Exception as e:
            print(f"\n‚ùå Erro ao executar bot: {e}")
    else:
        print("\nüí° Para iniciar o bot manualmente:")
        print("   python3 telegram_bot.py")
        print("\nüìñ Consulte TELEGRAM-ALBUM-EXAMPLE.md para exemplos visuais")

if __name__ == "__main__":
    main()
